version: '3.9'

services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: order_mgmt
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infra/postgres/init-auth.sql:/docker-entrypoint-initdb.d/init-auth.sql:ro
      - ./infra/postgres/init-orders.sql:/docker-entrypoint-initdb.d/init-orders.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d order_mgmt"]
      interval: 10s
      timeout: 5s
      retries: 5

  valkey:
    image: valkey/valkey:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - valkey_data:/data
    healthcheck:
      test: ["CMD", "valkey-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  auth-service:
    build: ./services/auth-service
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/order_mgmt
      - ADMIN_USERNAME=${ADMIN_USERNAME}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8001:8001"

  order-service:
    build: ./services/order-service
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/order_mgmt
      - AUTH_SERVICE_URL=http://auth-service:8001
    depends_on:
      postgres:
        condition: service_healthy
      auth-service:
        condition: service_started
    ports:
      - "8002:8002"

  web-gateway:
    build: ./services/web-gateway
    env_file:
      - .env
    environment:
      - AUTH_SERVICE_URL=http://auth-service:8001
      - ORDER_SERVICE_URL=http://order-service:8002
      - VALKEY_URL=valkey://valkey:6379/0
    depends_on:
      valkey:
        condition: service_healthy
      auth-service:
        condition: service_started
      order-service:
        condition: service_started
    ports:
      - "8000:8000"

volumes:
  postgres_data:
  valkey_data:

networks:
  default:
    driver: bridge
